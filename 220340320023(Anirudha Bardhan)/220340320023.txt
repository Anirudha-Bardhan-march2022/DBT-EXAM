Section I									(30 marks)

1.	Create table DEPT with the following structure:-
DEPTNO			int(2)
DNAME			varchar(15)
LOC				varchar(10)

Insert the following rows into the DEPT table:-
10	ACCOUNTING	NEW YORK
20	RESEARCH		DALLAS
30	SALES		CHICAGO
40	OPERATIONS	BOSTON


ans:

create table DEPT
(
DEPTNO  int(2),
DNAME   varchar(15),
LOC     varchar(10)
);

insert into DEPT(DEPTNO, DNAME, LOC) values
(10, 'ACCOUNTING', 'NEW YORK'), 
(20, 'RESEARCH', 'DALLAS'),
(30, 'SALES', 'CHICAGO'),
(40, 'OPERATIONS', 'BOSTON');

select * from DEPT;

o/p;-

# DEPTNO, DNAME, LOC
'10', 'ACCOUNTING', 'NEW YORK'
'20', 'RESEARCH', 'DALLAS'
'30', 'SALES', 'CHICAGO'
'40', 'OPERATIONS', 'BOSTON'


2.	Create table EMP with the following structure:-
EMPNO			int(4)
ENAME			varchar(10)
JOB				varchar(9)
HIREDATE			date
SAL				float(7,2)
COMM			float(7,2)
DEPTNO			int(2)

Insert the following rows into the EMP table:-
7839	KING		MANAGER	1991-11-17	5000	NULL	10
7698	BLAKE	CLERK	1981-05-01	2850	NULL	30
7782	CLARK	MANAGER	1981-06-09	2450	NULL	10
7566	JONES	CLERK	1981-04-02	2975	NULL 20
7654	MARTIN	SALESMAN	1981-09-28	1250	1400	30
7499	ALLEN	SALESMAN	1981-02-20	1600	300	30

ans:-

create table EMP
(
EMPNO      int(4),
ENAME      varchar(10),
JOB        varchar(9),
HIREDATE   date,
SAL        float(7,2),
COMM       float(7,2),
DEPTNO     int(2)
);

insert into EMP(empno, ename, job, hiredate, sal, comm, deptno) values
(7839, 'KING', 'MANAGER', '1991-11-17', 5000, NULL, 10),
(7698, 'BLAKE', 'CLERK', '1981-05-01', 2850, NULL, 30),
(7782, 'CLARK', 'MANAGER', '1981-06-09', 2450, NULL, 10),
(7566, 'JONES', 'CLERK', '1981-04-02', 2975, NULL, 20),
(7654, 'MARTIN', 'SALESMAN', '1981-09-28', 1250, 1400, 30),
(7499,	'ALLEN', 'SALESMAN', '1981-02-20', 1600, 300, 30);

select * from EMP;

o/p:-
# EMPNO, ENAME, JOB, HIREDATE, SAL, COMM, DEPTNO
'7839', 'KING', 'MANAGER', '1991-11-17', '5000.00', NULL, '10'
'7698', 'BLAKE', 'CLERK', '1981-05-01', '2850.00', NULL, '30'
'7782', 'CLARK', 'MANAGER', '1981-06-09', '2450.00', NULL, '10'
'7566', 'JONES', 'CLERK', '1981-04-02', '2975.00', NULL, '20'
'7654', 'MARTIN', 'SALESMAN', '1981-09-28', '1250.00', '1400.00', '30'
'7499', 'ALLEN', 'SALESMAN', '1981-02-20', '1600.00', '300.00', '30'


3.	Display all the employees where SAL between 2500 and 5000 (inclusive of both).

ans:-

select * from EMP 
where sal between 2500 and 5000;

o/p:-
# EMPNO, ENAME, JOB, HIREDATE, SAL, COMM, DEPTNO
'7839', 'KING', 'MANAGER', '1991-11-17', '5000.00', NULL, '10'
'7698', 'BLAKE', 'CLERK', '1981-05-01', '2850.00', NULL, '30'
'7566', 'JONES', 'CLERK', '1981-04-02', '2975.00', NULL, '20'

4.	Display all the ENAMEs in descending order of ENAME.

ans:-

select ename from emp
order by 1 desc;

o/p:-
# ename
'MARTIN'
'KING'
'JONES'
'CLARK'
'BLAKE'
'ALLEN'

5.	Display all the JOBs in lowercase.

ans:-

select lower(job) "Job" from emp;

o/p:-

# Job
'manager'
'clerk'
'manager'
'clerk'
'salesman'
'salesman'

6.	Display the ENAMEs and the lengths of the ENAMEs.

ans:-

select ename, length(ename)"Length of enames" from emp;

o/p:-
# ename, Length of enames
'KING', '4'
'BLAKE', '5'
'CLARK', '5'
'JONES', '5'
'MARTIN', '6'
'ALLEN', '5'

7.	Display the DEPTNO and the count of employees who belong to that DEPTNO .

ans:-




8.	Display the DNAMEs and the ENAMEs who belong to that DNAME.

ans:-

select dname, ename from emp, dept
where dept.deptno = emp.deptno;

o/p:
# dname, ename
'ACCOUNTING', 'KING'
'SALES', 'BLAKE'
'ACCOUNTING', 'CLARK'
'RESEARCH', 'JONES'
'SALES', 'MARTIN'
'SALES', 'ALLEN'

9.	Display the position at which the string ‘AR’ occurs in the ename.

ans:-

select ename, instr(ename, 'AR')"AR pos in enames" from emp;

o/p:-

# ename, AR pos in enames
'KING', '0'
'BLAKE', '0'
'CLARK', '3'
'JONES', '0'
'MARTIN', '2'
'ALLEN', '0'

10.	Display the HRA for each employee given that HRA is 20% of SAL.

ans:-

Select ename, sal*0.2"HRA" from emp;

o/p:-

# ename, HRA
'KING', '1000.00'
'BLAKE', '570.00'
'CLARK', '490.00'
'JONES', '595.00'
'MARTIN', '250.00'
'ALLEN', '320.00'

section II

1.	Write a stored procedure by the name of PROC1 that accepts two varchar strings as parameters. Your procedure should then determine if the first varchar string exists inside the varchar string. For example, if string1 = ‘DAC’ and string2 = ‘CDAC, then string1 exists inside string2.  The stored procedure should insert the appropriate message into a suitable TEMPP output table. Calling program for the stored procedure need not be written.

ans:-

create table TEMPP
(
Str1  varchar(24),
Str2  varchar(23)
);
drop table tempp;
delimiter //
create procedure PROC1(a varchar(23), b varchar(24))
begin
   if instr(b, a) = 0 then
			select 'Given Str is not exist';
			insert into tempp values('Given Str is not exist', a);
   else
			select 'Given Str is exist';
            insert into tempp values('Given Str is exist', a);
   end if;
   
end;//
delimiter ;
call proc1('DAC', 'CDAC');
select * from TEMPP;
truncate table TEMPP;
drop procedure proc1;

o/p-

# Given Str is exist
'Given Str is exist'

# Str1, Str2
'Given Str is exist', 'DAC'
'Given Str is exist', 'DAC'

